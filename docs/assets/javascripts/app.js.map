{"version":3,"file":"app.js","sources":["../../../app/assets/javascripts/CustomElement.js","../../../app/assets/javascripts/util.js","../../../app/assets/javascripts/ModalWindow.js","../../../app/assets/javascripts/LazyElement.js","../../../app/assets/javascripts/UserChat.js"],"sourcesContent":["class CustomElement extends HTMLElement {\n    /**\n     * @returns {Promise<void>}\n     */\n    async show() {\n        this.removeAttribute('hidden');\n        await this.animationFinished();\n    }\n\n    /**\n     * @returns {Promise<void>}\n     */\n    async hide() {\n        if (this.isHidden()) {\n            return;\n        }\n        this.setAttribute('hidden', '');\n        await this.animationFinished();\n        this.setAttribute('hidden', 'hidden');\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isHidden() {\n        return !this.getClientRects().length;\n    }\n\n    /**\n     * @returns {Promise<void>}\n     */\n    async animationFinished() {\n        try {\n            await Promise.all(\n                this.getAnimations?.().map((it) => it.finished) ?? [],\n            );\n        } catch {\n            // AbortError\n        }\n    }\n}\n\ncustomElements.define('custom-element', CustomElement);\nexport default CustomElement;\n","/**\n * @param {TemplateStringsArray} strings\n * @param {...any} values\n * @returns {string}\n */\nfunction html(strings, ...values) {\n    return strings.reduce((before, after, index) => {\n        const value = values[index - 1];\n\n        if (Array.isArray(value)) {\n            return before + value.join(' ') + after;\n        }\n        return before + value + after;\n    });\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nfunction encode(text) {\n    if (text) {\n        return text.replace(/[&<>\"'`]/g, (char) => `&#${char.charCodeAt(0)};`);\n    }\n    return '';\n}\n\nexport { html, encode };\n","import CustomElement from './CustomElement.js';\nimport { html } from './util.js';\n\nclass ModalWindow extends CustomElement {\n    /**\n     * @returns {void}\n     */\n    connectedCallback() {\n        this.setAttribute('role', 'dialog');\n        this.setAttribute('tabindex', '0');\n        this.classList.add('overlay');\n        requestAnimationFrame(() => this.wrapContent());\n\n        if (this.matchesHash()) {\n            this.show();\n        }\n\n        addEventListener('hashchange', this.handleHashChange);\n        this.addEventListener('focusout', this.handleFocusOut);\n        this.addEventListener('keydown', this.handleKeyDown);\n        this.addEventListener('click', this.handleClick);\n    }\n\n    /**\n     * @returns {void}\n     */\n    wrapContent() {\n        if (this.querySelector('.overlay__content')) {\n            return;\n        }\n        this.innerHTML = html`\n            <div class=\"overlay__content\">\n                <button class=\"overlay__hide\" title=\"Закрыть\"></button>\n                ${this.innerHTML}\n            </div>\n        `;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    matchesHash() {\n        return this.getAttribute('id') === location.hash.slice(1);\n    }\n\n    /**\n     * @override\n     */\n    async show() {\n        await super.show();\n        /**\n         * @type {HTMLElement | null}\n         */\n        const focusable = this.querySelector('[autofocus]');\n        (focusable ?? this).focus();\n    }\n\n    /**\n     * @returns {void}\n     */\n    handleHashChange = () => {\n        if (this.matchesHash()) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    };\n\n    /**\n     * @param {KeyboardEvent} event\n     * @returns {void}\n     */\n    handleKeyDown(event) {\n        if (event.key === 'Escape') {\n            history.pushState(null, '', '#');\n            this.handleHashChange();\n        }\n    }\n\n    /**\n     * @param {PointerEvent & { target: HTMLElement }} event\n     * @returns {void}\n     */\n    handleClick(event) {\n        if (event.target.closest('.overlay__hide')) {\n            history.pushState(null, '', '#');\n            this.handleHashChange();\n        }\n    }\n\n    /**\n     * @param {FocusEvent & { relatedTarget: HTMLElement | null }} event\n     * @returns {void}\n     */\n    handleFocusOut(event) {\n        if (!this.contains(event.relatedTarget)) {\n            this.focus();\n        }\n    }\n}\n\ncustomElements.define('modal-window', ModalWindow);\nexport default ModalWindow;\n","import CustomElement from './CustomElement.js';\n\nclass LazyElement extends CustomElement {\n    static intersectionObserver = new IntersectionObserver(\n        this.handleIntersections,\n    );\n\n    /**\n     * @typedef {IntersectionObserverEntry & {\n     *     target: LazyElement;\n     * }} Entry\n     *\n     * @param {Entry[]} entries\n     * @returns {void}\n     */\n    static handleIntersections(entries) {\n        entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n                entry.target.intersectedCallback();\n            }\n        });\n    }\n\n    /**\n     * @returns {void}\n     */\n    connectedCallback() {\n        /**\n         * @type {typeof LazyElement}\n         */\n        (this.constructor).intersectionObserver.observe(this);\n    }\n\n    /**\n     * @returns {void}\n     */\n    intersectedCallback() {\n        /**\n         * @type {typeof LazyElement}\n         */\n        (this.constructor).intersectionObserver.unobserve(this);\n    }\n}\n\ncustomElements.define('lazy-element', LazyElement);\nexport default LazyElement;\n","import LazyElement from './LazyElement.js';\nimport { encode, html } from './util.js';\n\nclass UserChat extends LazyElement {\n    /**\n     * @type {HTMLElement}\n     */\n    scroller = null;\n\n    /**\n     * @type {HTMLElement}\n     */\n    content = null;\n\n    /**\n     * @type {HTMLTextAreaElement}\n     */\n    textbox = null;\n\n    /**\n     * @type {User}\n     */\n    sender = null;\n\n    /**\n     * @override\n     */\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.classList.add('chat');\n        this.innerHTML = html`\n            <span class=\"chat__placeholder\">Загрузка...</span>\n        `;\n    }\n\n    /**\n     * @override\n     */\n    async intersectedCallback() {\n        if (this.scroller) {\n            this.scroller.scrollTop = this.content.scrollHeight;\n            return;\n        }\n        this.innerHTML = this.render(await this.loadData());\n        this.scroller = this.querySelector('.chat__content-scroller');\n        this.scroller.scrollTop = this.scroller.scrollHeight;\n        this.content = this.querySelector('.chat__content');\n        this.textbox = this.querySelector('.textbox');\n\n        this.addEventListener('input', this.handleInput);\n        this.addEventListener('keydown', this.handleKeyDown);\n        this.addEventListener('submit', this.handleSubmit);\n    }\n\n    /**\n     * @typedef {{\n     *     id: number;\n     *     name: string;\n     *     location?: string;\n     *     image: string;\n     * }} User\n     *\n     *\n     * @typedef {{\n     *     userId: number;\n     *     content: string;\n     * }} Entry\n     *\n     * @typedef {{\n     *     userId: number;\n     *     participants: User[];\n     *     entries: Entry[];\n     * }} Chat\n     *\n     * @returns {Promise<Chat>}\n     */\n    async loadData() {\n        try {\n            const url = this.getAttribute('data-source');\n            const response = await fetch(url);\n\n            if (!response.ok) {\n                throw new Error(response.statusText);\n            }\n            return response.json();\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n    /**\n     * @param {Chat} chat\n     * @returns {string}\n     */\n    render(chat) {\n        const recipient = chat.participants.find((it) => it.id !== chat.userId);\n        this.sender = chat.participants.find((it) => it.id === chat.userId);\n\n        return html`\n            <figure class=\"chat__header\">\n                <img\n                    class=\"chat__header-image\"\n                    src=\"${encode(recipient.image)}\"\n                    alt=\"\"\n                />\n                <figcaption class=\"chat__header-caption\">\n                    <span>${encode(recipient.name)}</span>\n                    <span>${encode(recipient.location)}</span>\n                </figcaption>\n            </figure>\n\n            <div class=\"chat__content-scroller\">\n                <ol class=\"chat__content\">\n                    ${chat.entries.map((entry) => {\n                        const outgoing = entry.userId === this.sender.id;\n\n                        return this.renderEntry({\n                            image: outgoing\n                                ? this.sender.image\n                                : recipient.image,\n                            content: entry.content,\n                            modifiers: outgoing ? ['_outgoing'] : [],\n                        });\n                    })}\n                </ol>\n            </div>\n\n            <form class=\"chat__footer\">\n                <img\n                    class=\"chat__footer-image\"\n                    src=\"${encode(this.sender.image)}\"\n                    alt=\"\"\n                />\n                <div class=\"chat__footer-controls\">\n                    <textarea\n                        class=\"textbox\"\n                        name=\"message\"\n                        placeholder=\"Сообщение\"\n                        rows=\"4\"\n                        autofocus\n                    ></textarea>\n                    <button class=\"button\">Отправить</button>\n                </div>\n            </form>\n        `;\n    }\n\n    /**\n     * @typedef {{\n     *     image: string;\n     *     content: string;\n     *     modifiers?: string[];\n     * }} EntryOptions\n     *\n     * @param {EntryOptions} options\n     * @returns {string}\n     */\n    renderEntry({ image, content, modifiers = [] }) {\n        return html`\n            <li class=\"${['chat__entry', ...modifiers]}\">\n                <img class=\"chat__entry-image\" src=\"${encode(image)}\" alt=\"\" />\n                <div class=\"chat__entry-content\">${encode(content)}</div>\n            </li>\n        `;\n    }\n\n    /**\n     * @param {EntryOptions} options\n     * @returns {void}\n     */\n    addEntry(options) {\n        this.content.insertAdjacentHTML('beforeend', this.renderEntry(options));\n        this.scroller.scrollTop = this.scroller.scrollHeight;\n\n        const entry = this.content.lastElementChild;\n        setTimeout(() => {\n            entry.classList.remove('_recent');\n        }, 2000);\n    }\n\n    /**\n     * @returns {void}\n     */\n    handleInput() {\n        const style = getComputedStyle(this.textbox);\n        const padding = Number.parseFloat(style.paddingTop) * 2;\n        const lineHeight = Number.parseFloat(style.lineHeight);\n        const maxLines = 7;\n\n        this.textbox.style.height = null;\n        this.textbox.style.height = `${Math.min(\n            this.textbox.scrollHeight,\n            padding + lineHeight * maxLines,\n        )}px`;\n    }\n\n    /**\n     * @param {KeyboardEvent} event\n     * @returns {void}\n     */\n    handleKeyDown(event) {\n        if (event.key === 'Enter' && event.ctrlKey) {\n            this.querySelector('form').requestSubmit();\n        }\n    }\n\n    /**\n     * @param {SubmitEvent} event\n     * @returns {void}\n     */\n    handleSubmit(event) {\n        event.preventDefault();\n\n        if (!this.textbox.value.trim()) {\n            return;\n        }\n        this.addEntry({\n            image: this.sender.image,\n            content: this.textbox.value,\n            modifiers: ['_outgoing', '_recent'],\n        });\n        this.textbox.value = '';\n        this.textbox.style.height = null;\n    }\n}\n\ncustomElements.define('user-chat', UserChat);\nexport default UserChat;\n"],"names":["CustomElement","HTMLElement","show","this","removeAttribute","animationFinished","hide","isHidden","setAttribute","getClientRects","length","_this$getAnimations$m","_this$getAnimations","Promise","all","getAnimations","call","map","it","finished","_unused","html","strings","_len","arguments","values","Array","_key","reduce","before","after","index","value","isArray","join","encode","text","replace","char","concat","charCodeAt","customElements","define","constructor","super","_defineProperty","matchesHash","connectedCallback","classList","add","requestAnimationFrame","wrapContent","addEventListener","handleHashChange","handleFocusOut","handleKeyDown","handleClick","querySelector","innerHTML","_templateObject","_taggedTemplateLiteral","getAttribute","location","hash","slice","focusable","focus","event","key","history","pushState","target","closest","contains","relatedTarget","LazyElement","handleIntersections","entries","forEach","entry","isIntersecting","intersectedCallback","intersectionObserver","observe","unobserve","IntersectionObserver","scroller","scrollTop","content","scrollHeight","render","loadData","textbox","handleInput","handleSubmit","url","response","fetch","ok","Error","statusText","json","error","alert","chat","recipient","participants","find","id","userId","sender","_templateObject2","image","name","outgoing","renderEntry","modifiers","_ref","_templateObject3","addEntry","options","insertAdjacentHTML","lastElementChild","setTimeout","remove","style","getComputedStyle","padding","Number","parseFloat","paddingTop","lineHeight","height","Math","min","ctrlKey","requestSubmit","preventDefault","trim"],"mappings":"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"}