!function(){"use strict";function t(t,e,n){return(e=function(t){var e=function(t,e){if("object"!=typeof t||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var s=n.call(t,e);if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:e+""}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function e(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}class n extends HTMLElement{async show(){this.removeAttribute("hidden"),await this.animationFinished()}async hide(){this.isHidden()||(this.setAttribute("hidden",""),await this.animationFinished(),this.setAttribute("hidden","hidden"))}isHidden(){return!this.getClientRects().length}async animationFinished(){try{var t,e;await Promise.all(null!==(t=null===(e=this.getAnimations)||void 0===e?void 0:e.call(this).map(t=>t.finished))&&void 0!==t?t:[])}catch(t){}}}function s(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),s=1;s<e;s++)n[s-1]=arguments[s];return t.reduce((t,e,s)=>{const i=n[s-1];return Array.isArray(i)?t+i.join(" ")+e:t+i+e})}function i(t){return t?t.replace(/[&<>"'`]/g,t=>"&#".concat(t.charCodeAt(0),";")):""}var a,r,o,c;customElements.define("custom-element",n);customElements.define("modal-window",class extends n{constructor(){super(...arguments),t(this,"handleHashChange",()=>{this.matchesHash()?this.show():this.hide()})}connectedCallback(){this.setAttribute("role","dialog"),this.setAttribute("tabindex","0"),this.classList.add("overlay"),requestAnimationFrame(()=>this.wrapContent()),this.matchesHash()&&this.show(),addEventListener("hashchange",this.handleHashChange),this.addEventListener("focusout",this.handleFocusOut),this.addEventListener("keydown",this.handleKeyDown),this.addEventListener("click",this.handleClick)}wrapContent(){this.querySelector(".overlay__content")||(this.innerHTML=s(a||(a=e(['\n            <div class="overlay__content">\n                <button class="overlay__hide" title="Закрыть"></button>\n                ',"\n            </div>\n        "])),this.innerHTML))}matchesHash(){return this.getAttribute("id")===location.hash.slice(1)}async show(){await super.show();const t=this.querySelector("[autofocus]");(null!=t?t:this).focus()}handleKeyDown(t){"Escape"===t.key&&(history.pushState(null,"","#"),this.handleHashChange())}handleClick(t){t.target.closest(".overlay__hide")&&(history.pushState(null,"","#"),this.handleHashChange())}handleFocusOut(t){this.contains(t.relatedTarget)||this.focus()}});class h extends n{static handleIntersections(t){t.forEach(t=>{t.isIntersecting&&t.target.intersectedCallback()})}connectedCallback(){this.constructor.intersectionObserver.observe(this)}intersectedCallback(){this.constructor.intersectionObserver.unobserve(this)}}t(h,"intersectionObserver",new IntersectionObserver(h.handleIntersections)),customElements.define("lazy-element",h);customElements.define("user-chat",class extends h{constructor(){super(...arguments),t(this,"content",null),t(this,"textbox",null),t(this,"sender",null)}connectedCallback(){super.connectedCallback(),this.classList.add("chat"),this.innerHTML=s(r||(r=e(['\n            <span class="chat__placeholder">Загрузка...</span>\n        '])))}async intersectedCallback(){this.content?this.content.scrollTop=this.content.scrollHeight:(this.innerHTML=this.render(await this.loadData()),this.content=this.querySelector(".chat__content"),this.content.scrollTop=this.content.scrollHeight,this.textbox=this.querySelector(".textbox"),this.addEventListener("input",this.handleInput),this.addEventListener("keydown",this.handleKeyDown),this.addEventListener("submit",this.handleSubmit))}async loadData(){try{const t=this.getAttribute("data-source"),e=await fetch(t);if(!e.ok)throw new Error(e.statusText);return e.json()}catch(t){alert(t)}}render(t){const n=t.participants.find(e=>e.id!==t.userId);return this.sender=t.participants.find(e=>e.id===t.userId),s(o||(o=e(['\n            <figure class="chat__header">\n                <img\n                    class="chat__header-image"\n                    src="','"\n                    alt=""\n                />\n                <figcaption class="chat__header-caption">\n                    <span>',"</span>\n                    <span>",'</span>\n                </figcaption>\n            </figure>\n\n            <ol class="chat__content">\n                ','\n            </ol>\n\n            <form class="chat__footer">\n                <img\n                    class="chat__footer-image"\n                    src="','"\n                    alt=""\n                />\n                <div class="chat__footer-controls">\n                    <textarea\n                        class="textbox"\n                        name="message"\n                        placeholder="Сообщение"\n                        rows="4"\n                        autofocus\n                    ></textarea>\n                    <button class="button">Отправить</button>\n                </div>\n            </form>\n        '])),i(n.image),i(n.name),i(n.location),t.entries.map(t=>{const e=t.userId===this.sender.id;return this.renderEntry({image:e?this.sender.image:n.image,content:t.content,modifiers:e?["_outgoing"]:[]})}),i(this.sender.image))}renderEntry(t){let{image:n,content:a,modifiers:r=[]}=t;return s(c||(c=e(['\n            <li class="','">\n                <img class="chat__entry-image" src="','" alt="" />\n                <div class="chat__entry-content">',"</div>\n            </li>\n        "])),["chat__entry",...r],i(n),i(a))}addEntry(t){this.content.insertAdjacentHTML("beforeend",this.renderEntry(t)),this.content.scrollTop=this.content.scrollHeight;const e=this.content.lastElementChild;setTimeout(()=>{e.classList.remove("_recent")},2e3)}handleInput(){const t=getComputedStyle(this.textbox),e=2*Number.parseFloat(t.paddingTop),n=Number.parseFloat(t.lineHeight);this.textbox.style.height=null,this.textbox.style.height="".concat(Math.min(this.textbox.scrollHeight,e+7*n),"px")}handleKeyDown(t){"Enter"===t.key&&t.ctrlKey&&this.querySelector("form").requestSubmit()}handleSubmit(t){t.preventDefault(),this.textbox.value.trim()&&(this.addEntry({image:this.sender.image,content:this.textbox.value,modifiers:["_outgoing","_recent"]}),this.textbox.value="",this.textbox.style.height=null)}})}();
//# sourceMappingURL=app.js.map
